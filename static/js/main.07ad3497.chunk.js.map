{"version":3,"sources":["default.jpg","setStorages.js","Header.js","Showcase.js","Pagination.js","api.js","Discover.js","Search.js","Movie.js","CollectionsList.js","MovieSettings.js","Collection.js","NotFound.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","sessionStorage","setItem","JSON","stringify","localStorage","getItem","Header","react_default","a","createElement","className","NavLink","activeClassName","exact","to","Showcase","props","results","length","map","movie","Link","key","id","concat","src","poster_path","defaultImg","alt","title","Pagination","page","type","value","onClick","onChangePage","BASE_URL","API_KEY","api","discover","_discover","Object","asyncToGenerator","regenerator_default","mark","_callee","response","_ref","wrap","_context","prev","next","fetch","sent","json","abrupt","stop","_x","apply","this","arguments","search","_search","_callee2","query","_ref2","_context2","_x2","_x3","_movie","_callee3","_context3","_x4","Discover","state","parse","parseInt","loading","handleChangePage","e","newPage","_this","target","setState","Fragment","src_Pagination","src_Showcase_0","parent","React","Component","Search","handleChange","handleSubmit","preventDefault","onSubmit","placeholder","onChange","Movie","toggle","newCollection","existingCollection","name","selectedOption","selectedCollection","handleToggle","handleInputChange","handleSelectChange","handleOptionChange","handleAddMovie","collections","find","collection","alert","movies","push","objectSpread","match","params","checked","htmlFor","i","production_countries","genre","join","genres","overview","Collections","MovieSettings","movieRating","addRating","ratings","rating","movieId","onAddRating","deleteMovie","collectionId","collectionIndex","indexOf","movieIndex","splice","onDeleteMovie","buttonText","max","min","Collection","handleAddRating","handleDeleteMovie","handleDeleteCollection","filter","_this2","src_MovieSettings_0","NotFound","App","BrowserRouter","basename","process","src_Header","Switch","Route","path","component","CollectionsList","Boolean","window","location","hostname","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.07ad3497.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/default.141521f9.jpg\";","sessionStorage.setItem('discoverResults', JSON.stringify([]));\r\nsessionStorage.setItem('discoverPage', 1);\r\nsessionStorage.setItem('searchQuery', '');\r\nsessionStorage.setItem('searchResults', JSON.stringify([]));\r\nsessionStorage.setItem('searchPage', 1);\r\nif (!localStorage.getItem('collections')) localStorage.setItem('collections', JSON.stringify([]));\r\nif (!localStorage.getItem('ratings')) localStorage.setItem('ratings', JSON.stringify([]));","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport './Header.css';\r\n\r\nfunction Header() {\r\n  return (\r\n    <header className=\"header__container\">\r\n      <ul className='header__menu'>\r\n        <li className='header__menu-item'><NavLink className='header__menu-link' activeClassName='header__active-link' exact to='/'>Descubrir</NavLink></li>\r\n        <li className='header__menu-item'><NavLink className='header__menu-link' activeClassName='header__active-link' to='/search'>Buscar</NavLink></li>\r\n        <li className='header__menu-item'><NavLink className='header__menu-link' activeClassName='header__active-link' to='/collections'>Mis colecciones</NavLink></li>\r\n      </ul>\r\n    </header>\r\n  )\r\n}\r\n\r\nexport default Header;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport './Showcase.css';\r\nimport defaultImg from './default.jpg';\r\n\r\nconst Showcase = (props) => {\r\n  const results = props.results;\r\n  return (\r\n    <ul className='showcase__container'>\r\n      {results.length === 0 \r\n\r\n      ? <div className='no-results'>Sin resultados. Realiza una búsqueda, por favor</div>\r\n\r\n      : results.map(movie => \r\n      <Link key={movie.id} className='link' to={`/movie/${movie.id}`}>\r\n        <li key={movie.id} className='showcase__movie'>\r\n          <img className='showcase__img' src={movie.poster_path ? `https://image.tmdb.org/t/p/w185${movie.poster_path}` : defaultImg} alt={movie.title}/>\r\n          <div className='showcase__title'>{movie.title}</div>\r\n        </li>\r\n      </Link>)}\r\n    </ul>\r\n  )\r\n}\r\n\r\nexport default Showcase;","import React from 'react';\r\nimport './Pagination.css'\r\n\r\nfunction Pagination(props) {\r\n  return (\r\n    <div className='pagination__container'>\r\n      {props.page === 1\r\n      ? null\r\n      : <button type='submit' className='button' value='-1' onClick={props.onChangePage}>Anterior</button>}\r\n      <div className='pagination__current-page'>{props.page}</div>\r\n      <button type='submit' className='button' value='1' onClick={props.onChangePage}>Siguiente</button>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Pagination;\r\n","const BASE_URL = 'https://api.themoviedb.org/3';\r\nconst DISCOVER_PATH = '/discover/movie';\r\nconst SEARCH_PATH = '/search/movie';\r\nconst MOVIE_PATH = '/movie';\r\nconst API_KEY = '687ccf3a676569dd642e0706e30a6dae';\r\nconst LANGUAGE = 'es-ES';\r\n\r\nconst api = {\r\n\r\n  discover : async function(page) {\r\n    const response = await fetch(`${BASE_URL}${DISCOVER_PATH}?api_key=${API_KEY}&language=${LANGUAGE}&page=${page}&sort_by=popularity.desc`);\r\n    const { results } = await response.json();\r\n    return results;\r\n  },\r\n\r\n  search : async function(query, page) {\r\n    if (query === '') return '';\r\n    const response = await fetch(`${BASE_URL}${SEARCH_PATH}?api_key=${API_KEY}&language=${LANGUAGE}&query=${query}&page=${page}`);\r\n    const { results } = await response.json();\r\n    return results;\r\n  },\r\n\r\n  movie : async function(id) {\r\n    const response = await fetch(`${BASE_URL}${MOVIE_PATH}/${id}?api_key=${API_KEY}&language=${LANGUAGE}`);\r\n    const movie = await response.json();\r\n    return movie;\r\n  }\r\n\r\n}\r\n\r\nexport default api;\r\n","import React from 'react';\r\nimport Showcase from './Showcase';\r\nimport Pagination from './Pagination';\r\nimport api from './api';\r\n\r\nclass Discover extends React.Component {\r\n\r\n  state = {\r\n    results : JSON.parse(sessionStorage.getItem('discoverResults')),\r\n    page : parseInt(sessionStorage.getItem('discoverPage')),\r\n    loading : true\r\n  }\r\n\r\n  async componentDidMount() {\r\n    const results = await api.discover(this.state.page)\r\n    this.setState({ results : results, loading: false})\r\n  }\r\n\r\n  render() {\r\n    const results = this.state.results;\r\n    if (this.state.loading) return <div className='no-results'>Cargando. Espera, por favor.</div>\r\n    return (\r\n      <>\r\n      <Pagination page={this.state.page} onChangePage={this.handleChangePage} />\r\n      <Showcase results={results} parent='discover'/>\r\n      </>\r\n    )\r\n  }\r\n\r\n  handleChangePage = async (e) => {\r\n    const newPage = this.state.page + parseInt(e.target.value);\r\n    const results = await api.discover(newPage);\r\n    sessionStorage.setItem('discoverResults', JSON.stringify(results));\r\n    sessionStorage.setItem('discoverPage', JSON.stringify(newPage));\r\n    this.setState({ results: results, page : newPage });\r\n  }\r\n}\r\n\r\nexport default Discover;","import React from 'react';\r\nimport Showcase from './Showcase';\r\nimport Pagination from './Pagination';\r\nimport api from './api';\r\n\r\nclass Search extends React.Component {\r\n\r\n  state = {\r\n    query : sessionStorage.getItem('searchQuery'),\r\n    results : JSON.parse(sessionStorage.getItem('searchResults')),\r\n    page : parseInt(sessionStorage.getItem('searchPage')),\r\n    loading : false\r\n  }\r\n\r\n  render() {\r\n    const results = this.state.results;\r\n    if (this.state.loading) return <div className='no-results'>Cargando. Espera, por favor.</div>\r\n    return (\r\n      <>\r\n        <form className='form' onSubmit={this.handleSubmit}>\r\n          <input className='text-input' type=\"text\" value={this.state.query} placeholder='Buscar...' onChange={this.handleChange} />\r\n          <button className='button' type='submit'>Buscar</button>\r\n        </form>\r\n        {results.length === 0\r\n        ? null\r\n        : <Pagination page={this.state.page} onChangePage={this.handleChangePage} />}\r\n        <Showcase results={results} parent='search' />\r\n      </>\r\n    )\r\n  }\r\n\r\n  handleChange = (e) => {\r\n    sessionStorage.setItem('searchQuery', e.target.value);\r\n    this.setState({query: e.target.value});\r\n  }\r\n\r\n  handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    this.setState({ loading : true });\r\n    const results = await api.search(this.state.query, 1);\r\n    sessionStorage.setItem('searchResults', JSON.stringify(results));\r\n    sessionStorage.setItem('searchPage', 1);\r\n    this.setState({ results : results, page : 1, loading : false });\r\n  }\r\n\r\n  handleChangePage = async (e) => {\r\n    const newPage = this.state.page + parseInt(e.target.value);\r\n    const results = await api.search(this.state.query, newPage);\r\n    sessionStorage.setItem('searchResults', JSON.stringify(results));\r\n    sessionStorage.setItem('searchPage', JSON.stringify(newPage));\r\n    this.setState({ results: results, page : newPage });\r\n  }\r\n}\r\n\r\nexport default Search;","import React from 'react';\r\nimport './Movie.css';\r\nimport defaultImg from './default.jpg';\r\nimport api from './api';\r\n\r\nclass Movie extends React.Component {\r\n\r\n  state = { \r\n            movie : {},\r\n            toggle : false,\r\n            newCollection : '',\r\n            existingCollection : JSON.parse(localStorage.getItem('collections'))[0] ? JSON.parse(localStorage.getItem('collections'))[0].name : '',\r\n            selectedOption : 'new',\r\n            selectedCollection : '',\r\n            loading : true\r\n          }\r\n\r\n  async componentDidMount() {\r\n    const movie = await api.movie(this.props.match.params.id);\r\n    this.setState({ movie : movie, loading : false });\r\n  }\r\n\r\n  render() {\r\n    const movie = this.state.movie;\r\n    const loading = this.state.loading;\r\n    return (\r\n      <>\r\n        { loading\r\n        ? <div className='no-results'>Cargando. Espera, por favor.</div>\r\n        : <div className='movie__details'>\r\n            <h1 className='movie__title'>{movie.title}</h1>\r\n            <div className='movie__img-container'>\r\n              <img className='movie__img' src={movie.poster_path ? `https://image.tmdb.org/t/p/w500${movie.poster_path}` : defaultImg} alt={movie.title}/>\r\n            </div>\r\n\r\n          { !this.state.toggle \r\n          ? <button type='submit' className='button' onClick={this.handleToggle}>Añadir a mis favoritos</button>\r\n          : <>\r\n              <form onSubmit={this.handleAddMovie}>\r\n                <input id='new' className='movie__radio' type='radio' name='collection' value={this.state.newCollection} onChange={this.handleOptionChange} checked={this.state.selectedOption === 'new'} /><label htmlFor='new'> Añadir a nueva colección: </label>\r\n                <input className='text-input' type='text' name='collection-name' value={this.state.newCollection} onChange={this.handleInputChange} /><br></br>\r\n\r\n            { this.state.existingCollection !== ''\r\n              ? <>\r\n                <input id='existing' className='movie__radio' type='radio' name='collection' value={this.state.existingCollection} onChange={this.handleOptionChange} checked={this.state.selectedOption === 'existing'} />\r\n                <label htmlFor='existing'> Añadir a colección existente: </label>\r\n                <select className='text-input' onChange={this.handleSelectChange}>\r\n                  {JSON.parse(localStorage.getItem('collections')).map((collection, i) => <option key={i} value={collection.name}>{collection.name}</option>)}\r\n                </select>\r\n                </>\r\n              : null\r\n            }\r\n\r\n                <br></br>\r\n                <button className='button' type='submit'>Añadir</button>\r\n                <button className='button' onClick={this.handleToggle}>Cancelar</button>\r\n              </form>\r\n            </>}\r\n\r\n            <div className='movie__overview'>\r\n              <p className='movie__detail'><strong>Nacionalidad:</strong> {movie.production_countries.map(genre => genre.name).join(', ')}</p>\r\n              <p className='movie__detail'><strong>Géneros:</strong> {movie.genres.map(genre => genre.name).join(', ')}</p>\r\n              <h2 className='movie__overview-title'>Sinopsis:</h2>\r\n              <p>{movie.overview}</p>\r\n            </div>\r\n          </div> }\r\n      </>\r\n    )\r\n  }\r\n\r\n  handleToggle = () => {\r\n    this.setState({ toggle : !this.state.toggle })\r\n  }\r\n\r\n  handleInputChange = (e) => {\r\n    this.setState({ newCollection : e.target.value, selectedCollection : this.state.selectedOption === 'new' ? e.target.value : this.state.selectedCollection })\r\n  }\r\n\r\n  handleSelectChange = (e) => {\r\n    this.setState({ existingCollection : e.target.value, selectedCollection : this.state.selectedOption === 'existing' ? e.target.value : this.state.selectedCollection })\r\n  }\r\n\r\n  handleOptionChange = (e) => {\r\n    this.setState({ selectedOption: e.target.id, selectedCollection : e.target.value })\r\n  }\r\n\r\n  handleAddMovie = (e) => {\r\n    e.preventDefault();\r\n    const collections = JSON.parse(localStorage.getItem('collections'))\r\n    if (this.state.selectedCollection === '') {\r\n      alert ('Error: indique un nombre para la colección')\r\n      return\r\n    }\r\n    if (this.state.selectedOption === 'new' && collections.find(collection => collection.name === this.state.selectedCollection)) {\r\n      alert('Error: Coleccción duplicada. No se ha creado ninguna colección')\r\n      return\r\n    }\r\n    if (this.state.selectedOption === 'existing') {\r\n      const collection = collections.find(collection => collection.name === this.state.selectedCollection)\r\n      if (collection.movies.find(movie => movie.id === this.state.movie.id)) {\r\n        alert('Error: Película duplicada. No se ha añadido ninguna película')\r\n        return\r\n      }\r\n    }\r\n    this.state.selectedOption === 'existing' \r\n    ? collections.find(collection => collection.name === this.state.selectedCollection).movies.push(this.state.movie)\r\n    : collections.push({ id : collections.length, name : this.state.selectedCollection, movies : [{...this.state.movie}] })\r\n    localStorage.setItem('collections', JSON.stringify(collections))\r\n    this.setState({ \r\n      newCollection : '',\r\n      existingCollection : JSON.parse(localStorage.getItem('collections'))[0] ? JSON.parse(localStorage.getItem('collections'))[0].name : '',\r\n      toggle : false\r\n    })\r\n  }\r\n}\r\n\r\nexport default Movie;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport './CollectionsList.css'\r\n\r\nclass Collections extends React.Component {\r\n\r\n  state = {\r\n    collections : JSON.parse(localStorage.getItem('collections')),\r\n    name : ''\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n      <form className='form' onSubmit={this.handleSubmit}>\r\n          <input className='text-input' type=\"text\" value={this.state.name} placeholder='Nombre...' onChange={this.handleChange} />\r\n          <button className='button' type='submit'>Crear colección</button>\r\n        </form>\r\n      <ul className='collection-list__container'>\r\n        {this.state.collections.map(collection => <li key={collection.id} className='collection-list__item'><Link className='link' to={`/collection/${collection.id}`} >{collection.name}</Link></li>)}\r\n      </ul>\r\n      </>\r\n    )\r\n  }\r\n\r\n  handleChange = (e) => {\r\n    this.setState({ name : e.target.value });\r\n  }\r\n\r\n  handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    if (this.state.name === '') return;\r\n    const collections = JSON.parse(localStorage.getItem('collections'));\r\n    if (collections.find(collection => collection.name === this.state.name)) {\r\n      alert('Error: Coleccción duplicada. No se ha creado ninguna colección')\r\n      return\r\n    }\r\n    collections.push({ id : collections.length, name : this.state.name, movies : [] })\r\n    localStorage.setItem('collections', JSON.stringify(collections))\r\n    this.setState({ collections : collections, name : '' })\r\n  }\r\n  \r\n}\r\n\r\nexport default Collections;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport './MovieSettings.css';\r\n\r\nclass MovieSettings extends React.Component {\r\n  state = {\r\n    value : this.props.movieRating === 'Sin nota' ? 0 : this.props.movieRating,\r\n    toggle : false\r\n  }\r\n\r\n  render() {\r\n    const rating = this.props.movieRating;\r\n    const buttonText = rating === 'Sin nota' ? 'Puntuar' : 'Cambiar nota';\r\n    return (\r\n      <div className='movie-settings__container'>\r\n        <div className=\"movie-settings__rating\">NOTA: {rating}</div>\r\n        {this.state.toggle\r\n        ? <form onSubmit={this.addRating} >\r\n            <input className='movie-settings__rating' type='number' max='10' min='0' value={this.state.value} onChange={this.handleChange} />\r\n            <button className='button' type='submit'>{buttonText}</button>\r\n          </form> \r\n        : <button type='submit' className=\"button\" onClick={this.handleToggle} >{buttonText}</button>}\r\n        <button type='submit' className=\"button\"><Link className='link' to={`/movie/${this.props.movieId}`}>Ver detalles</Link></button>\r\n        <button type='submit' className=\"button\" onClick={this.deleteMovie}>Borrar de la colección</button>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  handleChange = (e) => {\r\n    this.setState({ value : e.target.value })\r\n  }\r\n\r\n  handleToggle = () => {\r\n    this.setState({ toggle : !this.state.toggle })\r\n  }\r\n\r\n  addRating = (e) => {\r\n    e.preventDefault();\r\n    this.handleToggle();\r\n    const ratings = JSON.parse(localStorage.getItem('ratings'));\r\n    ratings.find(rating => rating.id === this.props.movieId)\r\n    ? ratings.find(rating => rating.id === this.props.movieId).value = parseInt(this.state.value)\r\n    : ratings.push({id : this.props.movieId, value : parseInt(this.state.value)});\r\n    localStorage.setItem('ratings', JSON.stringify(ratings));\r\n    this.props.onAddRating(ratings);\r\n  }\r\n\r\n  deleteMovie = (e) => {\r\n    e.preventDefault();\r\n    const collections = JSON.parse(localStorage.getItem('collections'));\r\n    const collection = collections.find(collection => collection.id === this.props.collectionId);\r\n    const movie = collection.movies.find(movie => movie.id === this.props.movieId);\r\n    const collectionIndex = collections.indexOf(collection);\r\n    const movieIndex = collection.movies.indexOf(movie);\r\n    collections[collectionIndex].movies.splice(movieIndex, 1);\r\n    localStorage.setItem('collections', JSON.stringify(collections));\r\n    this.props.onDeleteMovie(collection);\r\n  }\r\n}\r\n\r\nexport default MovieSettings;","import React from 'react';\r\nimport './Collection.css';\r\nimport defaultImg from './default.jpg';\r\nimport MovieSettings from './MovieSettings'\r\n\r\nclass Collection extends React.Component {\r\n\r\n  state = {\r\n    collection : JSON.parse(localStorage.getItem('collections')).find(collection => collection.id === parseInt(this.props.match.params.id)),\r\n    ratings : JSON.parse(localStorage.getItem('ratings'))\r\n  }\r\n\r\n  render() {\r\n    const collection = this.state.collection;\r\n    const ratings = this.state.ratings;\r\n    if (!this.state.collection) return <div className='no-results'>La colección no existe</div>\r\n    return (\r\n      <div className='collection__container'>\r\n        <div className='collection__header'>\r\n          <h1 className='collection__name'>{collection.name}</h1>\r\n          <button className='button' onClick={this.handleDeleteCollection}>Eliminar colección</button>\r\n        </div>\r\n        {collection.movies.length === 0\r\n        ? <div className='no-results'>Colección sin contenido. Añade películas, por favor</div>\r\n        : collection.movies.map((movie, i) => <li key={i} className='collection__movie'>\r\n          <div className='collection__img-container'><img className='collection__img' src={movie.poster_path ? `https://image.tmdb.org/t/p/w185${movie.poster_path}` : defaultImg} alt={movie.title}/></div>\r\n          <div className='collection__main-info'>\r\n            <h2 className='collection__title'>{movie.title}</h2>\r\n            <div className='collection__overview'>{movie.overview}</div>\r\n          </div>\r\n          <MovieSettings \r\n          collectionId={collection.id}\r\n          movieId={movie.id} \r\n          movieRating={ratings.find(rating => rating.id === movie.id)\r\n          ? ratings.find(rating => rating.id === movie.id).value\r\n          : 'Sin nota'} \r\n          onAddRating={this.handleAddRating}\r\n          onDeleteMovie={this.handleDeleteMovie} />\r\n        </li>)}\r\n      </div>\r\n    )\r\n  }\r\n\r\n  handleAddRating = (ratings) => {\r\n    this.setState({ ratings : ratings })\r\n  }\r\n\r\n  handleDeleteMovie = (collection) => {\r\n    this.setState({collection : collection })\r\n  }\r\n\r\n  handleDeleteCollection = () => {\r\n    let collections = JSON.parse(localStorage.getItem('collections'));\r\n    collections = collections.filter(collection => collection.id !== this.state.collection.id)\r\n    localStorage.setItem('collections', JSON.stringify(collections));\r\n    this.setState({ collection: null });\r\n  }\r\n}\r\n\r\nexport default Collection;","import React from 'react';\r\n\r\nconst NotFound = () => {\r\n  return (<div className='no-results'>Página no encontrada</div>)\r\n}\r\n\r\nexport default NotFound;","import React, { Component } from 'react';\r\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\r\nimport Header from './Header';\r\nimport Discover from './Discover';\r\nimport Search from './Search';\r\nimport Movie from './Movie';\r\nimport CollectionsList from './CollectionsList';\r\nimport Collection from './Collection';\r\nimport NotFound from './NotFound';\r\nimport './setStorages';\r\n\r\nclass App extends Component {\r\n  \r\n  render() {\r\n    return (\r\n      <BrowserRouter basename={process.env.PUBLIC_URL}>\r\n        <div className=\"App\">\r\n          <Header/>\r\n          <Switch>\r\n          <Route exact path='/' component={Discover}/>\r\n          <Route exact path='/search' component={Search}/>\r\n          <Route exact path='/collections' component={CollectionsList}/>\r\n          <Route path='/movie/:id' component={Movie} />\r\n          <Route path='/collection/:id' component={Collection} />\r\n          <Route component={NotFound}/>\r\n          </Switch>\r\n        </div>\r\n      </BrowserRouter>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}